version: '3.8'
services:
  db:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - /home/dolph/docker/postgres/data:/var/lib/postgresql/data
      - /home/dolph/docker/postgres/entrypoint:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    networks:
      - db_network


  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 38080:8080
    networks:
      - db_network
      - web_network
    depends_on:
      - db


  happy-quokka:
    container_name: happy-quokka
    restart: always
    build: .
    networks:
      - db_network
      - web_network
    volumes:
      - /home/dolph/happy-quokka/videos:/apps/static/videos
      - /home/dolph/happy-quokka/thumbs:/apps/static/thumbs
#      - ../env.docker:/.env


  nginx:
    container_name: nginx
    restart: always
    image: "nginx:latest"
    ports:
      - "80:80"
    volumes:
      - "./nginx/happyquokka.conf:/etc/nginx/conf.d/default.conf:ro"
    networks:
      - web_network
    depends_on:
      - happy-quokka


# HAPPY API
#  happy-api:
#    build:
#      context: .
#      dockerfile: ../happy-api/Dockerfile
#    ports:
#      - "5000:5000"
#    depends_on:
#      - redis
#    networks:
#      - db_network
#      - web_network
#    environment:
#      - FLASK_APP=app.py
#      - FLASK_RUN_HOST=0.0.0.0
#      - FLASK_RUN_PORT=5000
#    volumes:
#      - /home/dolph/happy-api:/app/data
#
#  celery-worker:
#    build:
#      context: .
#      dockerfile: ../happy-api/Dockerfile
#    command: celery -A app.celery worker --loglevel=info
#    depends_on:
#      - redis
#    networks:
#      - db_network
#      - web_network
#    environment:
#      - CELERY_BROKER_URL=redis://redis:6379/0
#      - CELERY_RESULT_BACKEND=redis://redis:6379/0
#    volumes:
#      - /home/dolph/happy-api:/app/data
#
#  redis:
#    image: "redis:latest"
#    ports:
#      - "6379:6379"
#    networks:
#      - db_network
#      - web_network

networks:
  db_network:
    name: db_network
#    external: true
  web_network:
    name: web_network
#    external: true